const { sendReplies } = require('../send-replies');

// Vercel —Ñ—É–Ω–∫—Ü—ñ—è
module.exports = async (req, res) => {
  // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // –û–±—Ä–æ–±–∫–∞ OPTIONS –∑–∞–ø–∏—Ç—É (preflight)
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  if (req.method !== 'POST') {
    res.status(405).json({ ok: false, error: 'Method not allowed' });
    return;
  }

  try {
    console.log('üåê –ó–∞–ø–∏—Ç –Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ä–µ–ø–ª—ñ–∫ —á–µ—Ä–µ–∑ –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
    
    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω—ñ —Ä–µ–ø–ª—ñ–∫–∏
    await sendReplies();
    
    console.log('ü§ñ –ë–û–¢ (–í–ï–ë –†–ï–ü–õ–Ü–ö–ò): –í—Å—ñ —Ä–µ–ø–ª—ñ–∫–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ —É—Å–ø—ñ—à–Ω–æ');
    
    res.status(200).json({ 
      ok: true, 
      message: '–í—Å—ñ —Ä–µ–ø–ª—ñ–∫–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ —É—Å–ø—ñ—à–Ω–æ!' 
    });

  } catch (error) {
    console.error('‚ùå Error sending replies via web:', error);
    res.status(500).json({ 
      ok: false, 
      error: '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ä–µ–ø–ª—ñ–∫: ' + error.message 
    });
  }
}; 