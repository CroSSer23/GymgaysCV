// –ì–ª–æ–±–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
let messagesStore = [];
const MAX_MESSAGES = 100;

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Å—Ö–æ–≤–∏—â–µ
function addMessage(message) {
  const messageObj = {
    id: Date.now() + Math.random(), // –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID
    user: message.user,
    text: message.text,
    time: message.time || new Date().toLocaleTimeString('uk-UA', {hour: '2-digit', minute: '2-digit'}),
    type: message.type || 'incoming',
    timestamp: Date.now()
  };
  
  messagesStore.unshift(messageObj);
  
  // –û–±–º–µ–∂—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
  if (messagesStore.length > MAX_MESSAGES) {
    messagesStore = messagesStore.slice(0, MAX_MESSAGES);
  }
  
  console.log(`üì® –î–æ–¥–∞–Ω–æ –≤ —Å—Ö–æ–≤–∏—â–µ: ${messageObj.user} - "${messageObj.text}"`);
  return messageObj;
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
function getRecentMessages(limit = 20) {
  return messagesStore.slice(0, limit);
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
function cleanOldMessages() {
  const oneHourAgo = Date.now() - (60 * 60 * 1000); // 1 –≥–æ–¥–∏–Ω–∞ —Ç–æ–º—É
  messagesStore = messagesStore.filter(msg => msg.timestamp > oneHourAgo);
}

// –û—á–∏—â–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 30 —Ö–≤–∏–ª–∏–Ω
setInterval(cleanOldMessages, 30 * 60 * 1000);

module.exports = {
  addMessage,
  getRecentMessages,
  cleanOldMessages
}; 