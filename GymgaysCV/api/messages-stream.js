// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ–¥–∞–≤–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
let recentMessages = [];
const MAX_MESSAGES = 50;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–æ—Ç–æ–∫
function addMessageToStream(message) {
  recentMessages.unshift(message);
  
  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
  if (recentMessages.length > MAX_MESSAGES) {
    recentMessages = recentMessages.slice(0, MAX_MESSAGES);
  }
  
  console.log(`üì® –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ—Ç–æ–∫: ${message.user} - "${message.text}"`);
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { addMessageToStream };
}

// Vercel —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è Server-Sent Events
module.exports = async (req, res) => {
  // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // –û–±—Ä–æ–±–∫–∞ OPTIONS –∑–∞–ø–∏—Ç—É (preflight)
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  if (req.method !== 'GET') {
    res.status(405).json({ error: 'Method not allowed' });
    return;
  }

  // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ SSE
  res.setHeader('Content-Type', 'text/event-stream');
  res.setHeader('Cache-Control', 'no-cache');
  res.setHeader('Connection', 'keep-alive');

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  if (recentMessages.length > 0) {
    const data = JSON.stringify({
      type: 'recent_messages',
      messages: recentMessages.slice(0, 10) // –û—Å—Ç–∞–Ω–Ω—ñ 10 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    });
    
    res.write(`data: ${data}\n\n`);
  }

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ heartbeat –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
  const heartbeat = setInterval(() => {
    res.write(`data: ${JSON.stringify({ type: 'heartbeat', timestamp: Date.now() })}\n\n`);
  }, 30000);

  // –û–±—Ä–æ–±–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è –∑'—î–¥–Ω–∞–Ω–Ω—è
  req.on('close', () => {
    clearInterval(heartbeat);
    console.log('üì° SSE connection closed');
  });

  req.on('aborted', () => {
    clearInterval(heartbeat);
    console.log('üì° SSE connection aborted');
  });

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  res.write(`data: ${JSON.stringify({ 
    type: 'connected', 
    message: '–ó\'—î–¥–Ω–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ',
    timestamp: Date.now()
  })}\n\n`);
};

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
module.exports.addMessageToStream = addMessageToStream; 